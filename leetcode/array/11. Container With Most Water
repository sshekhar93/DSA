You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).

Find two lines that together with the x-axis form a container, such that the container contains the most water.

Return the maximum amount of water a container can store.

Solution:

class Solution {
public:
    int maxArea(vector<int>& height) {
        int maxArea = 0;
        int start = 0;
        int end = height.size()-1;

        maxArea = min(height[start], height[end]) * (end-start);
        while(start < end){
            if(height[start]< height[end]){
                start++;
            }
            else if(height[start] >= height[end])
            {
                end--;
            }

            int area = min(height[start], height[end]) * (end-start);
            // cout << area << " " << start << " " << end << endl;
            maxArea = max(maxArea, area);
        }

        return maxArea;
    }
};
